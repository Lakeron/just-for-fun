{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Just for fun",
    "description": "RESTful API for collection books and authors",
    "contact": {
      "name": "Andrej Baran",
      "email": "lakeron@gmail.com"
    },
    "license": {
      "name": "MIT",
      "url": "http://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/book": {
      "get": {
        "description": "Returns all books",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page number for pagination",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of results to return",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "books response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/book"
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new book in the collection.  Duplicates are allowed",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "book",
            "in": "body",
            "description": "Book to add to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/newBook"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "book response",
            "schema": {
              "$ref": "#/definitions/book"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/book/{id}": {
      "get": {
        "description": "returns a book based on the ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of book to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "book response",
            "schema": {
              "$ref": "#/definitions/book"
            }
          }
        }
      },
      "delete": {
        "description": "deletes a book based on the ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of book to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "book deleted"
          }
        }
      }
    },
    "/author": {
      "get": {
        "description": "Returns all authors",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page number for pagination",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of results to return",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "authors response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/author"
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new author in the collection.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "body",
            "description": "Author to add to the collection",
            "required": true,
            "schema": {
              "$ref": "#/definitions/newAuthor"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "author response",
            "schema": {
              "$ref": "#/definitions/book"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/author/{id}": {
      "get": {
        "description": "returns a author based on the ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of author to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "author response",
            "schema": {
              "$ref": "#/definitions/author"
            }
          }
        }
      },
      "delete": {
        "description": "deletes a author based on the ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of author to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "author deleted"
          }
        }
      }
    }
  },
  "definitions": {
    "book": {
      "type": "object",
      "required": [
        "id",
        "title",
        "desc"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "type": "string"
        },
        "desc": {
          "type": "string"
        },
        "authors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/author"
          }
        }
      }
    },
    "newBook": {
      "type": "object",
      "required": [
        "title",
        "desc",
        "authors"
      ],
      "properties": {
        "title": {
          "type": "string"
        },
        "desc": {
          "type": "string"
        },
        "authors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/newAuthor"
          }
        }
      }
    },
    "author": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "books": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/book"
          }
        }
      }
    },
    "newAuthor": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "fields": {
          "type": "string"
        }
      }
    }
  }
}